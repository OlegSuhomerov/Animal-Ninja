
local game_components = require('scripts.start_modules.game_components')
local gui_constants = require('scripts.start_modules.gui_constants')
local game_messages = require('scripts.start_modules.game_messages')
local rendercam = require('rendercam.rendercam')
local scenes = require('scripts.start_modules.scenes')
local loader_scenes = require('scripts.modules.loader_scenes')

local function calc_min_pos(size_x, size_y, center)
	local pos_x = center.x - size_x / 2
	local pos_y = center.y - size_y / 2
	return vmath.vector3(pos_x, pos_y, 0)
end

local function calc_max_pos(size_x, size_y, center)
	local pos_x = center.x + size_x / 2
	local pos_y = center.y + size_y / 2
	return vmath.vector3(pos_x, pos_y, 0)
end

local function button_hit_check(self, action)
	action_pos = rendercam.screen_to_world_2d(action.screen_x, action.screen_y, false)
	if action_pos.x > self.min_pos_buttom.x
	and action_pos.y > self.min_pos_buttom.y
	and action_pos.x < self.max_pos_buttom.x
	and action_pos.y < self.max_pos_buttom.y then
		return true
	end
end

function init(self)
	msg.post(".", game_messages.acquire_input_focus)
	local node = gui.get_node(game_components.buttom_start_game)
	local buttom_center = gui.get_position(node)

	self.min_pos_buttom = calc_min_pos(gui_constants.buttom_width, gui_constants.buttom_hight, buttom_center)
	self.max_pos_buttom = calc_max_pos(gui_constants.buttom_width, gui_constants.buttom_hight, buttom_center)
end

function update(self, dt)

end

function on_message(self, message_id, message, sender)

end

function on_input(self, action_id, action)
	if action_id == game_messages.touch and button_hit_check(self, action) then
		loader_scenes.show_scene(scenes.gaming_level)
	end
end








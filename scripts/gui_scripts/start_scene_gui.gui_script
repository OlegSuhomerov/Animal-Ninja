
local game_components = require('scripts.start_modules.game_components')
local game_messages = require('scripts.start_modules.game_messages')
local scenes = require('scripts.start_modules.scenes')
local loader_scenes = require('scripts.modules.loader_scenes')
local record = require('scripts.modules.record')
local config = require('scripts.start_modules.config')

function init(self)
	msg.post(".", game_messages.acquire_input_focus)
	local node = gui.get_node(game_components.record_score)
	gui.set_text(node, record.show())
	self.play_animation = false
	
	local node_but = gui.get_node(game_components.button)
	self.start_color_but = gui.get_color(node_but)
end

function update(self, dt)

end

function on_message(self, message_id, message, sender)

end

function on_input(self, action_id, action)
	
	local node_but = gui.get_node(game_components.button)
	local node = gui.get_node(game_components.button_start_game)
	
	if action_id == game_messages.touch and gui.pick_node(node_but, action.x, action.y) then
		gui.set_color(node_but, config.gray)
	end
	
	if action.released and gui.pick_node(node_but, action.x, action.y) then
		
		gui.set_color(node_but, self.start_color_but)
		
		if self.play_animation == false then
			self.play_animation = true
			gui.animate(node, game_messages.scale, 0, gui.PLAYBACK_LOOP_FORWARD, 0.7, 0, function()
				loader_scenes.show_scene(scenes.gaming_level)
			end)
		end
	end
end









local game_components = require('scripts.start_modules.game_components')
local gui_constants = require('scripts.start_modules.gui_constants')
local game_messages = require('scripts.start_modules.game_messages')
local scenes = require('scripts.start_modules.scenes')
local loader_scenes = require('scripts.modules.loader_scenes')
local record = require('scripts.modules.record')
local config = require('scripts.start_modules.config')
local transitions = require "monarch.transitions.gui"
local monarch = require "monarch.monarch"

function init(self)

	self.transition = transitions.create(gui.get_node("popup"))
	.show_in(transitions.slide_in_bottom, gui.EASING_OUTQUAD, 0.6, 1.5)
	.show_out(transitions.slide_out_bottom, gui.EASING_INQUAD, 0.6, 0.5)
	.back_in(transitions.slide_in_left, gui.EASING_OUTQUAD, 0.6, 0)
	.back_out(transitions.slide_out_right, gui.EASING_INQUAD, 0.6, 0)
	
	msg.post(".", game_messages.acquire_input_focus)
	self.play_animation = false
	local node = gui.get_node(game_components.score_popup)
	gui.set_text(node, gui_constants.score_in_popup)

	local node = gui.get_node(game_components.new_record)
	
	if record.check() then
		gui.set_enabled(node, true)
	else
		gui.set_enabled(node, false)
	end
	
end

function update(self, dt)

end

function on_message(self, message_id, message, sender)
	--if message_id == game_messages.transition_show_in then
		self.transition.handle(message_id, message, sender)
	--end
end

function on_input(self, action_id, action)
	local node_home = gui.get_node(game_components.button_home)
	local node_restart =gui.get_node(game_components.button_restart)
	
	if action_id == game_messages.touch then
		if gui.pick_node(node_home, action.x, action.y) and action.released then

			if self.play_animation == false then
				self.play_animation = true
				gui.animate(node_home, game_messages.scale, 0, gui.PLAYBACK_LOOP_FORWARD, 0.7, 0, function()
					loader_scenes.show_scene(scenes.start_scene)
					loader_scenes.hide_scene(scenes.popup_restart)
				end)
			end
		
		elseif gui.pick_node(node_restart, action.x, action.y) and action.released then

			if self.play_animation == false then
				self.play_animation = true
				gui.animate(node_restart, game_messages.scale, 0, gui.PLAYBACK_LOOP_FORWARD, 0.7, 0, function()
					msg.post(game_components.restart_level, game_messages.reset_level)
					loader_scenes.hide_scene(scenes.popup_restart)
				end)
			end
		end
	end
end

